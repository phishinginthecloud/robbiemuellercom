name: 'Terraform Deploy'

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.x

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      - name: 'Deploy Website'
        run: aws s3 sync website/ s3://robbiemuellercom --delete

      - name: 'Terraform Init'
        run: terraform init
        working-directory: Terraform

      - name: Check if S3 bucket exists and managed by Terraform
        id: check_bucket
        run: |
          EXISTS=$(aws s3api head-bucket --bucket robbiemuellercom --region us-east-1 2>&1 || true)
          if [[ -z $EXISTS ]]; then
            echo "Bucket does not exist"
            echo "::set-output name=exists::false"
          else
            echo "Bucket exists"
            echo "::set-output name=exists::true"
            MANAGED=$(terraform state list | grep aws_s3_bucket.static_website || echo "not_managed")
            if [[ $MANAGED == "not_managed" ]]; then
              echo "Bucket not managed by Terraform"
              echo "::set-output name=managed::false"
            else
              echo "Bucket managed by Terraform"
              echo "::set-output name=managed::true"
            fi
          fi


      - name: Import existing S3 bucket (if exists and not managed)
        if: steps.check_bucket.outputs.exists == 'true' && steps.check_bucket.outputs.managed == 'false'
        run: terraform import aws_s3_bucket.static_website robbiemuellercom
        working-directory: Terraform

      - name: 'Terraform Validate'
        run: terraform validate
        working-directory: Terraform

      - name: 'Terraform Plan'
        run: terraform plan
        working-directory: Terraform
        continue-on-error: true

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve
        working-directory: Terraform
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'


